{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  value: 0\n};\nexport var counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment: function increment(state) {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: function decrement(state) {\n      state.value -= 1;\n    },\n    incrementByAmount: function incrementByAmount(state, action) {\n      state.value += action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nvar _counterSlice$actions = counterSlice.actions,\n    increment = _counterSlice$actions.increment,\n    decrement = _counterSlice$actions.decrement,\n    incrementByAmount = _counterSlice$actions.incrementByAmount;\nexport { increment, decrement, incrementByAmount };\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","counterSlice","name","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","reducer"],"sources":["E:/project/cmrl_project/client/src/redux/counter.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  value: 0,\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\r\n\r\nexport default counterSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AADY,CAArB;AAIA,OAAO,IAAMC,YAAY,GAAGH,WAAW,CAAC;EACtCI,IAAI,EAAE,SADgC;EAEtCH,YAAY,EAAZA,YAFsC;EAGtCI,QAAQ,EAAE;IACRC,SAAS,EAAE,mBAACC,KAAD,EAAW;MACpB;MACA;MACA;MACA;MACAA,KAAK,CAACL,KAAN,IAAe,CAAf;IACD,CAPO;IAQRM,SAAS,EAAE,mBAACD,KAAD,EAAW;MACpBA,KAAK,CAACL,KAAN,IAAe,CAAf;IACD,CAVO;IAWRO,iBAAiB,EAAE,2BAACF,KAAD,EAAQG,MAAR,EAAmB;MACpCH,KAAK,CAACL,KAAN,IAAeQ,MAAM,CAACC,OAAtB;IACD;EAbO;AAH4B,CAAD,CAAhC,C,CAoBP;;4BAC2DR,YAAY,CAACS,O;IAAzDN,S,yBAAAA,S;IAAWE,S,yBAAAA,S;IAAWC,iB,yBAAAA,iB;;AAErC,eAAeN,YAAY,CAACU,OAA5B"},"metadata":{},"sourceType":"module"}