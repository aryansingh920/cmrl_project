{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';var initialState={value:0};export var counterSlice=createSlice({name:'counter',initialState:initialState,reducers:{increment:function increment(state){// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\nstate.value+=1;},decrement:function decrement(state){state.value-=1;},incrementByAmount:function incrementByAmount(state,action){state.value+=action.payload;}}});// Action creators are generated for each case reducer function\nvar _counterSlice$actions=counterSlice.actions,increment=_counterSlice$actions.increment,decrement=_counterSlice$actions.decrement,incrementByAmount=_counterSlice$actions.incrementByAmount;export{increment,decrement,incrementByAmount};export default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","counterSlice","name","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","reducer"],"sources":["E:/project/cmrl_project/client/src/redux/counter.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  value: 0,\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\r\n\r\nexport default counterSlice.reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,aAAY,CAAG,CACnBC,KAAK,CAAE,CADY,CAArB,CAIA,MAAO,IAAMC,aAAY,CAAGH,WAAW,CAAC,CACtCI,IAAI,CAAE,SADgC,CAEtCH,YAAY,CAAZA,YAFsC,CAGtCI,QAAQ,CAAE,CACRC,SAAS,CAAE,mBAACC,KAAD,CAAW,CACpB;AACA;AACA;AACA;AACAA,KAAK,CAACL,KAAN,EAAe,CAAf,CACD,CAPO,CAQRM,SAAS,CAAE,mBAACD,KAAD,CAAW,CACpBA,KAAK,CAACL,KAAN,EAAe,CAAf,CACD,CAVO,CAWRO,iBAAiB,CAAE,2BAACF,KAAD,CAAQG,MAAR,CAAmB,CACpCH,KAAK,CAACL,KAAN,EAAeQ,MAAM,CAACC,OAAtB,CACD,CAbO,CAH4B,CAAD,CAAhC,CAoBP;AACO,0BAAoDR,YAAY,CAACS,OAAjE,CAAQN,SAAR,uBAAQA,SAAR,CAAmBE,SAAnB,uBAAmBA,SAAnB,CAA8BC,iBAA9B,uBAA8BA,iBAA9B,C,8CAEP,cAAeN,aAAY,CAACU,OAA5B"},"metadata":{},"sourceType":"module"}